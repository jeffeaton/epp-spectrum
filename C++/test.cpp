#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <gsl/gsl_rng.h>
#include <gsl/gsl_matrix.h>

#include "states.h"
#include "model.h"
#include "likelihood.h"

#define PROJ_STEPS 426
const double rVec[PROJ_STEPS] = {0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.000000000,
                                 0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.000000000,
                                 0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.000000000, 0.717848833, 0.715227819, 0.712646261, 0.710103342, 0.707598246, 0.705130158, 0.702698260, 0.700301736, 0.697939770, 0.695611546,
                                 0.693316248, 0.691053058, 0.688821161, 0.686619741, 0.684447981, 0.682305064, 0.680190175, 0.678102497, 0.676041214, 0.674005509, 0.671994566, 0.670007570, 0.668043703, 0.666102149, 0.664182091, 0.662282715, 0.660403203, 0.658542738, 0.656700505, 0.654875688,
                                 0.653067470, 0.651275034, 0.649497564, 0.647734245, 0.645984259, 0.644246790, 0.642521023, 0.640806140, 0.639101326, 0.637405764, 0.635718637, 0.634039131, 0.632366427, 0.630699710, 0.629038163, 0.627380971, 0.625727316, 0.624076383, 0.622427356, 0.620779417,
                                 0.619131751, 0.617483541, 0.615833971, 0.614182224, 0.612527485, 0.610868937, 0.609205763, 0.607537148, 0.605862275, 0.604180328, 0.602490490, 0.600791945, 0.599083876, 0.597365469, 0.595635905, 0.593894369, 0.592140045, 0.590372115, 0.588589765, 0.586792177,
                                 0.584978535, 0.583148023, 0.581299825, 0.579433123, 0.577547103, 0.575640947, 0.573713840, 0.571764965, 0.569793505, 0.567798644, 0.565779567, 0.563735456, 0.561665495, 0.559568869, 0.557444760, 0.555292353, 0.553110830, 0.550899377, 0.548657176, 0.546383411,
                                 0.544077266, 0.541737924, 0.539364569, 0.536956386, 0.534512561, 0.532032848, 0.529518093, 0.526969269, 0.524387348, 0.521773305, 0.519128110, 0.516452738, 0.513748160, 0.511015351, 0.508255281, 0.505468925, 0.502657255, 0.499821243, 0.496961863, 0.494080087,
                                 0.491176889, 0.488253240, 0.485310113, 0.482348482, 0.479369320, 0.476373598, 0.473362289, 0.470336367, 0.467296805, 0.464244574, 0.461180648, 0.458106000, 0.455021601, 0.451928426, 0.448827447, 0.445719636, 0.442605967, 0.439487412, 0.436364944, 0.433239535,
                                 0.430112159, 0.426983788, 0.423855395, 0.420727953, 0.417602435, 0.414479813, 0.411361059, 0.408247148, 0.405139052, 0.402037742, 0.398944193, 0.395859377, 0.392784267, 0.389719835, 0.386667054, 0.383626897, 0.380600337, 0.377588347, 0.374591899, 0.371611966,
                                 0.368649521, 0.365705537, 0.362780986, 0.359876841, 0.356994075, 0.354133661, 0.351296572, 0.348483780, 0.345696258, 0.342934978, 0.340200914, 0.337495039, 0.334818325, 0.332171744, 0.329556271, 0.326972876, 0.324422534, 0.321906217, 0.319424898, 0.316979549,
                                 0.314571144, 0.312200655, 0.309869054, 0.307577315, 0.305326411, 0.303117313, 0.300950996, 0.298828431, 0.296750592, 0.294718451, 0.292732981, 0.290795155, 0.288905945, 0.287066325, 0.285277266, 0.283539743, 0.281854727, 0.280223192, 0.278646066, 0.277123261,
                                 0.275653675, 0.274236161, 0.272869571, 0.271552758, 0.270284575, 0.269063875, 0.267889510, 0.266760333, 0.265675197, 0.264632955, 0.263632459, 0.262672563, 0.261752119, 0.260869980, 0.260024998, 0.259216027, 0.258441919, 0.257701527, 0.256993704, 0.256317302,
                                 0.255671174, 0.255054174, 0.254465154, 0.253902966, 0.253366463, 0.252854499, 0.252365926, 0.251899597, 0.251454364, 0.251029080, 0.250622599, 0.250233773, 0.249861454, 0.249504495, 0.249161750, 0.248832071, 0.248514311, 0.248207322, 0.247909957, 0.247621070,
                                 0.247339513, 0.247064138, 0.246793799, 0.246527348, 0.246263637, 0.246001521, 0.245739852, 0.245477481, 0.245213263, 0.244946050, 0.244674694, 0.244398049, 0.244114967, 0.243824301, 0.243524904, 0.243215629, 0.242895328, 0.242562854, 0.242217060, 0.241856799,
                                 0.241480923, 0.241088285, 0.240677739, 0.240248136, 0.239798330, 0.239327173, 0.238833519, 0.238316219, 0.237774127, 0.237206096, 0.236610978, 0.235987626, 0.235334892, 0.234651631, 0.233936693, 0.233188933, 0.232407203, 0.231590356, 0.230737244, 0.229846720,
                                 0.228917638, 0.227948849, 0.226939207, 0.225887564, 0.224792774, 0.223653688, 0.222469160, 0.221238043, 0.219959189, 0.218631451, 0.217253682, 0.215824735, 0.214343625, 0.212810795, 0.211227417, 0.209594672, 0.207913741, 0.206185803, 0.204412039, 0.202593628,
                                 0.200731751, 0.198827588, 0.196882320, 0.194897126, 0.192873186, 0.190811681, 0.188713791, 0.186580696, 0.184413577, 0.182213612, 0.179981984, 0.177719871, 0.175428454, 0.173108913, 0.170762428, 0.168390179, 0.165993347, 0.163573112, 0.161130654, 0.158667153,
                                 0.156183788, 0.153681742, 0.151162193, 0.148626321, 0.146075308, 0.143510332, 0.140932575, 0.138343216, 0.135743436, 0.133134414, 0.130517331, 0.127893367, 0.125263703, 0.122629518, 0.119991992, 0.117352306, 0.114711640, 0.112071174, 0.109432088, 0.106795563,
                                 0.104162778, 0.101534914, 0.098913150, 0.096298668, 0.093692647, 0.091096267, 0.088510709, 0.085937152, 0.083376778, 0.080830765, 0.078300295, 0.075786546, 0.073290701, 0.070813938, 0.068357438, 0.065922381, 0.063509947, 0.061121317, 0.058757670, 0.056420186,
                                 0.054110047, 0.051828432, 0.049576521, 0.047355494, 0.045166531, 0.043010814, 0.040889521, 0.038803833, 0.036754931, 0.034743993, 0.032772202, 0.030840736, 0.028950775, 0.027103501, 0.025300093, 0.023541731, 0.021829596, 0.020164868, 0.018548726, 0.016982351,
                                 0.015466924, 0.014003624, 0.012593631, 0.011238126, 0.009938289, 0.008695300};

const double iota = 0.0002466508;

double ll(struct modprev * out);  // forward declare, defined in likelihood.cpp

int main()
{

  size_t numOutDates = NUM_OUTDATES;

  double * Xout = (double *) malloc(numOutDates * NG * AG * DS *TS * sizeof(double));

  fnSpectrum(iota, rVec, numOutDates, Xout);

  printf("\n");
  for(size_t a = 0; a < AG; a++)
    printf("%10f %10f\n", Xout[42 + (0 + NG*(a + AG*(0 + DS*0)))*numOutDates],
           Xout[42 + (1 + NG*(a + AG*(0 + DS*0)))*numOutDates]);

  struct modprev out;
  fnSpectrumPrev(iota, rVec, &out);

  printf("\nANC prev  15 to 49 prev\n");
  for(size_t i = 0; i < numOutDates; i++)
    printf("%8.4f  %13.4f\n", out.ANCprev[i], out.a15to49prev[i]);

  printf("\nll = %f\n", ll(&out));

  const double theta[] = {-27.2776051, 0.2286067, 1.5936094, 2.0196487, -0.4601538, -1.6417664, 1.4846658, 0.1725820, 0.3623600};

  gsl_vector_const_view vw_theta = gsl_vector_const_view_array(theta, 9);

  
  printf("\n::Example with theta vector::\n");
  printf("log(prior): %f\n", log(prior(&(vw_theta.vector))));
  printf("log(likelihood): %f\n", log(likelihood(&(vw_theta.vector))));

  return 0;
}
